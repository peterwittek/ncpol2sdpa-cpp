{"name":"Ncpol2sdpa-cpp","tagline":"A converter from noncommutative polynomial optimization problems to sparse SDPA input format -- C++ version","body":"Ncpol2sdpa-Cpp\r\n==\r\nNcpol2sdpa-Cpp is a C++ library to convert a noncommutative polynomial optimization problem to a sparse semidefinite programming (SDP) problem that can be processed by the [SDPA](http://sdpa.sourceforge.net/) family of solvers. The optimization problem can be unconstrained or constrained by equalities and inequalities.\r\n\r\nThe objective is to be able to solve very large scale optimization problems. For example, a convergent series of lower bounds can be obtained for ground state problems with arbitrary Hamiltonians.\r\n\r\nThe implementation has an intuitive syntax for entering Hamiltonians and it scales for a larger number of noncommutative variables using a sparse representation of the SDP problem. \r\n\r\nDependencies\r\n==\r\nThe code requires [SymbolicC++](http://issc.uj.ac.za/symbolic/symbolic.html) to compile and it relies on the C++11 standard. GCC 4.8.1 is known to compile the code.\r\n\r\nUsage\r\n==\r\nA simple usage example is included in examplencpol.cpp. A more sophisticated application is given in hamiltonian.cpp, which implements the Hamiltonian of a fermionic system in a 2D grid.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}